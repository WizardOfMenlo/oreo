---
source: src/parser.rs
expression: parsed
---
Ok(
    Program {
        id: Identifier(
            "fib",
        ),
        compound: Compound {
            statements: [
                Decl(
                    Decl {
                        id: Identifier(
                            "x",
                        ),
                        expr: Some(
                            Expr {
                                head: Term {
                                    head: Factor {
                                        head: Product {
                                            head: Not(
                                                Unit(
                                                    Int(
                                                        1,
                                                    ),
                                                ),
                                            ),
                                            tail: Some(
                                                ProductPrime {
                                                    op: Times,
                                                    rhs: Unit(
                                                        Int(
                                                            2,
                                                        ),
                                                    ),
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        tail: Some(
                                            FactorPrime {
                                                op: Plus,
                                                rhs: Product {
                                                    head: Unit(
                                                        Int(
                                                            3,
                                                        ),
                                                    ),
                                                    tail: None,
                                                },
                                                tail: None,
                                            },
                                        ),
                                    },
                                    tail: Some(
                                        TermPrime {
                                            op: LesserThan,
                                            rhs: Factor {
                                                head: Product {
                                                    head: Unit(
                                                        Int(
                                                            4,
                                                        ),
                                                    ),
                                                    tail: None,
                                                },
                                                tail: None,
                                            },
                                            tail: None,
                                        },
                                    ),
                                },
                                tail: Some(
                                    ExprPrime {
                                        op: And,
                                        rhs: Term {
                                            head: Factor {
                                                head: Product {
                                                    head: Unit(
                                                        Int(
                                                            5,
                                                        ),
                                                    ),
                                                    tail: None,
                                                },
                                                tail: None,
                                            },
                                            tail: None,
                                        },
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            ],
        },
    },
)
