---
source: src/lexical.rs
expression: res
---
[
    Keyword(
        Program,
    ),
    Identifier(
        "fib",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Begin,
    ),
    Keyword(
        Var,
    ),
    Identifier(
        "n",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Var,
    ),
    Identifier(
        "first",
    ),
    Operator(
        Assignement,
    ),
    Literal(
        Integer(
            0,
        ),
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Var,
    ),
    Identifier(
        "second",
    ),
    Operator(
        Assignement,
    ),
    Literal(
        Integer(
            1,
        ),
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Var,
    ),
    Identifier(
        "next",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Var,
    ),
    Identifier(
        "c",
    ),
    Operator(
        Assignement,
    ),
    Literal(
        Integer(
            0,
        ),
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        Get,
    ),
    Identifier(
        "n",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        While,
    ),
    Punctuation(
        BracketOpen,
    ),
    Identifier(
        "c",
    ),
    Operator(
        LesserThan,
    ),
    Identifier(
        "n",
    ),
    Punctuation(
        BracketClose,
    ),
    Keyword(
        Begin,
    ),
    Keyword(
        If,
    ),
    Punctuation(
        BracketOpen,
    ),
    Identifier(
        "c",
    ),
    Operator(
        LesserOrEquals,
    ),
    Literal(
        Integer(
            1,
        ),
    ),
    Punctuation(
        BracketClose,
    ),
    Keyword(
        Then,
    ),
    Keyword(
        Begin,
    ),
    Identifier(
        "next",
    ),
    Operator(
        Assignement,
    ),
    Identifier(
        "c",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        End,
    ),
    Keyword(
        Else,
    ),
    Keyword(
        Begin,
    ),
    Identifier(
        "next",
    ),
    Operator(
        Assignement,
    ),
    Identifier(
        "first",
    ),
    Operator(
        Plus,
    ),
    Identifier(
        "second",
    ),
    Punctuation(
        Semicolon,
    ),
    Identifier(
        "second",
    ),
    Operator(
        Assignement,
    ),
    Identifier(
        "next",
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        End,
    ),
    Keyword(
        Print,
    ),
    Identifier(
        "next",
    ),
    Punctuation(
        Semicolon,
    ),
    Identifier(
        "c",
    ),
    Operator(
        Assignement,
    ),
    Identifier(
        "c",
    ),
    Operator(
        Plus,
    ),
    Literal(
        Integer(
            1,
        ),
    ),
    Punctuation(
        Semicolon,
    ),
    Keyword(
        End,
    ),
    Keyword(
        End,
    ),
]
