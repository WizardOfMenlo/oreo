---
source: src/lexer/mod.rs
expression: res
---
[
    RangedObject {
        inner: Keyword(
            Program,
        ),
        range: 0..7,
    },
    RangedObject {
        inner: Identifier(
            "fib",
        ),
        range: 8..11,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 11..12,
    },
    RangedObject {
        inner: Keyword(
            Begin,
        ),
        range: 14..19,
    },
    RangedObject {
        inner: Keyword(
            Var,
        ),
        range: 21..24,
    },
    RangedObject {
        inner: Identifier(
            "n",
        ),
        range: 25..26,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 26..27,
    },
    RangedObject {
        inner: Keyword(
            Var,
        ),
        range: 29..32,
    },
    RangedObject {
        inner: Identifier(
            "first",
        ),
        range: 33..38,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 39..41,
    },
    RangedObject {
        inner: Literal(
            Integer(
                0,
            ),
        ),
        range: 42..43,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 43..44,
    },
    RangedObject {
        inner: Keyword(
            Var,
        ),
        range: 46..49,
    },
    RangedObject {
        inner: Identifier(
            "second",
        ),
        range: 50..56,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 57..59,
    },
    RangedObject {
        inner: Literal(
            Integer(
                1,
            ),
        ),
        range: 59..60,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 60..61,
    },
    RangedObject {
        inner: Keyword(
            Var,
        ),
        range: 63..66,
    },
    RangedObject {
        inner: Identifier(
            "next",
        ),
        range: 67..71,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 71..72,
    },
    RangedObject {
        inner: Keyword(
            Var,
        ),
        range: 74..77,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 78..79,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 80..82,
    },
    RangedObject {
        inner: Literal(
            Integer(
                0,
            ),
        ),
        range: 82..83,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 84..85,
    },
    RangedObject {
        inner: Keyword(
            Print,
        ),
        range: 87..92,
    },
    RangedObject {
        inner: Literal(
            Str(
                "enter the number of terms",
            ),
        ),
        range: 93..120,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 120..121,
    },
    RangedObject {
        inner: Keyword(
            Get,
        ),
        range: 123..126,
    },
    RangedObject {
        inner: Identifier(
            "n",
        ),
        range: 127..128,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 128..129,
    },
    RangedObject {
        inner: Keyword(
            While,
        ),
        range: 131..136,
    },
    RangedObject {
        inner: Punctuation(
            BracketOpen,
        ),
        range: 137..138,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 139..140,
    },
    RangedObject {
        inner: Operator(
            LesserThan,
        ),
        range: 141..142,
    },
    RangedObject {
        inner: Identifier(
            "n",
        ),
        range: 143..144,
    },
    RangedObject {
        inner: Punctuation(
            BracketClose,
        ),
        range: 144..145,
    },
    RangedObject {
        inner: Keyword(
            Begin,
        ),
        range: 147..152,
    },
    RangedObject {
        inner: Keyword(
            If,
        ),
        range: 154..156,
    },
    RangedObject {
        inner: Punctuation(
            BracketOpen,
        ),
        range: 157..158,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 159..160,
    },
    RangedObject {
        inner: Operator(
            LesserOrEquals,
        ),
        range: 161..163,
    },
    RangedObject {
        inner: Literal(
            Integer(
                1,
            ),
        ),
        range: 164..165,
    },
    RangedObject {
        inner: Punctuation(
            BracketClose,
        ),
        range: 165..166,
    },
    RangedObject {
        inner: Keyword(
            Then,
        ),
        range: 168..172,
    },
    RangedObject {
        inner: Keyword(
            Begin,
        ),
        range: 173..178,
    },
    RangedObject {
        inner: Identifier(
            "next",
        ),
        range: 179..183,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 184..186,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 187..188,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 188..189,
    },
    RangedObject {
        inner: Keyword(
            End,
        ),
        range: 190..193,
    },
    RangedObject {
        inner: Keyword(
            Else,
        ),
        range: 195..199,
    },
    RangedObject {
        inner: Keyword(
            Begin,
        ),
        range: 200..205,
    },
    RangedObject {
        inner: Identifier(
            "next",
        ),
        range: 208..212,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 213..215,
    },
    RangedObject {
        inner: Identifier(
            "first",
        ),
        range: 216..221,
    },
    RangedObject {
        inner: Operator(
            Plus,
        ),
        range: 222..223,
    },
    RangedObject {
        inner: Identifier(
            "second",
        ),
        range: 224..230,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 230..231,
    },
    RangedObject {
        inner: Identifier(
            "second",
        ),
        range: 234..240,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 241..243,
    },
    RangedObject {
        inner: Identifier(
            "next",
        ),
        range: 244..248,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 248..249,
    },
    RangedObject {
        inner: Keyword(
            End,
        ),
        range: 251..254,
    },
    RangedObject {
        inner: Keyword(
            Print,
        ),
        range: 256..261,
    },
    RangedObject {
        inner: Identifier(
            "next",
        ),
        range: 262..266,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 266..267,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 269..270,
    },
    RangedObject {
        inner: Operator(
            Assignement,
        ),
        range: 271..273,
    },
    RangedObject {
        inner: Identifier(
            "c",
        ),
        range: 274..275,
    },
    RangedObject {
        inner: Operator(
            Plus,
        ),
        range: 276..277,
    },
    RangedObject {
        inner: Literal(
            Integer(
                1,
            ),
        ),
        range: 278..279,
    },
    RangedObject {
        inner: Punctuation(
            Semicolon,
        ),
        range: 279..280,
    },
    RangedObject {
        inner: Keyword(
            End,
        ),
        range: 282..285,
    },
    RangedObject {
        inner: Keyword(
            End,
        ),
        range: 287..290,
    },
]
